/* Generated by the Nim Compiler v0.14.2 */
/*   (c) 2016 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI3238 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI11677 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3285 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3224 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3236 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3240 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI3240 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3240.node = NNI3240;
var NNI3236 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3236.node = NNI3236;
NTI3285.base = NTI3224;
var NNI3224 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3285, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}]};
NTI3224.node = NNI3224;
var NNI3208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3208.node = NNI3208;
NTI3224.base = NTI3208;
NTI3236.base = NTI3224;
NTI3240.base = NTI3236;
var NNI11677 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI140, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}]};
NTI11677.node = NNI11677;
var NNI3238 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3238.node = NNI3238;
NTI3238.base = NTI3236;
function makeNimstrLit(c_13003) {

    var ln = c_13003.length;
    var result = new Array(ln + 1);
    var i = 0;
    for (; i < ln; ++i) {
      result[i] = c_13003.charCodeAt(i);
    }
    result[i] = 0; // terminating zero
    return result;
    }
function arrayConstr(len_18603, value_18604, typ_18605) {

      var result = new Array(len_18603);
      for (var i = 0; i < len_18603; ++i) result[i] = nimCopy(null, value_18604, typ_18605);
      return result;
    }
function SetConstr() {

      var result = {};
      for (var i = 0; i < arguments.length; ++i) {
        var x = arguments[i];
        if (typeof(x) == "object") {
          for (var j = x[0]; j <= x[1]; ++j) {
            result[j] = true;
          }
        } else {
          result[x] = true;
        }
      }
      return result;
    }
function nimCopy(dest_18115, src_18116, ti_18117) {

var result_18429 = null;
switch (ti_18117.kind) {
case 21: case 22: case 23: case 5: if (!(isfatpointer_18098(ti_18117))) {
result_18429 = src_18116;
}
else {
result_18429 = [src_18116[0], src_18116[1]];}


break;
case 19:       if (dest_18115 === null || dest_18115 === undefined) {
        dest_18115 = {};
      }
      else {
        for (var key in dest_18115) { delete dest_18115[key]; }
      }
      for (var key in src_18116) { dest_18115[key] = src_18116[key]; }
      result_18429 = dest_18115;
    
break;
case 18: case 17: if (!((ti_18117.base == null))) {
result_18429 = nimCopy(dest_18115, src_18116, ti_18117.base);
}
else {
if ((ti_18117.kind == 17)) {
result_18429 = (dest_18115 === null || dest_18115 === undefined) ? {m_type: ti_18117} : dest_18115;}
else {
result_18429 = (dest_18115 === null || dest_18115 === undefined) ? {} : dest_18115;}
}
nimCopyAux(result_18429, src_18116, ti_18117.node);

break;
case 24: case 4: case 27: case 16:       if (src_18116 === null) {
        result_18429 = null;
      }
      else {
        if (dest_18115 === null || dest_18115 === undefined) {
          dest_18115 = new Array(src_18116.length);
        }
        else {
          dest_18115.length = src_18116.length;
        }
        result_18429 = dest_18115;
        for (var i = 0; i < src_18116.length; ++i) {
          result_18429[i] = nimCopy(result_18429[i], src_18116[i], ti_18117.base);
        }
      }
    
break;
case 28:       if (src_18116 !== null) {
        result_18429 = src_18116.slice(0);
      }
    
break;
default: 
result_18429 = src_18116;
break;
}
return result_18429;
}
function cstrToNimstr(c_13203) {

  var ln = c_13203.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_13203.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else if((ch > 127) && (ch < 2048)) {
      result[r] = (ch >> 6) | 192;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    else {
      result[r] = (ch >> 12) | 224;
      ++r;
      result[r] = ((ch >> 6) & 63) | 128;
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  result[r] = 0; // terminating zero
  return result;
  }
function raiseException(e_12005, ename_12006) {

e_12005.name = ename_12006;
if ((excHandler == 0)) {
unhandledException(e_12005);
}

throw e_12005;}
var nimvm_5354 = false;
var nim_program_result = 0;
var globalraisehook_9813 = [null];
var localraisehook_9818 = [null];
var outofmemhook_9821 = [null];
function isfatpointer_18098(ti_18100) {

var result_18101 = false;
BeforeRet: do {
result_18101 = !((SetConstr(17, 16, 4, 18, 27, 19, 23, 22, 21)[ti_18100.base.kind] != undefined));
break BeforeRet;
} while (false); 
return result_18101;
}
function nimCopyAux(dest_18120, src_18121, n_18123) {

switch (n_18123.kind) {
case 0: 
break;
case 1:       dest_18120[n_18123.offset] = nimCopy(dest_18120[n_18123.offset], src_18121[n_18123.offset], n_18123.typ);
    
break;
case 2: L1: do {
var i_18415 = 0;
var HEX3Atmp_18417 = 0;
HEX3Atmp_18417 = (n_18123.len - 1);
var res_18420 = 0;
L2: do {
L3: while (true) {
if (!(res_18420 <= HEX3Atmp_18417)) break L3;
i_18415 = res_18420;
nimCopyAux(dest_18120, src_18121, n_18123.sons[i_18415]);
res_18420 += 1;
}
} while(false);
} while(false);

break;
case 3:       dest_18120[n_18123.offset] = nimCopy(dest_18120[n_18123.offset], src_18121[n_18123.offset], n_18123.typ);
      for (var i = 0; i < n_18123.sons.length; ++i) {
        nimCopyAux(dest_18120, src_18121, n_18123.sons[i][1]);
      }
    
break;
}
}
function add_9837(x_9840, x_9840_Idx, y_9841) {

var F={procname:"system.add",prev:framePtr,filename:"c:\\dev\\nim-0.14.2\\lib\\system.nim",line:0};
framePtr = F;
        var len = x_9840[0].length-1;
        for (var i = 0; i < y_9841.length; ++i) {
          x_9840[0][len] = y_9841.charCodeAt(i);
          ++len;
        }
        x_9840[0][len] = 0
      framePtr = framePtr.prev;
}
function auxwritestacktrace_11672(f_11674) {

var Tmp3;
var result_11675 = [null];
var it_11683 = f_11674;
var i_11684 = 0;
var total_11685 = 0;
var tempframes_11689 = arrayConstr(64, {Field0: null, Field1: 0}, NTI11677);
L1: do {
L2: while (true) {
if (!!((it_11683 == null))) Tmp3 = false; else {Tmp3 = (i_11684 <= 63); }if (!Tmp3) break L2;
tempframes_11689[i_11684].Field0 = it_11683.procname;
tempframes_11689[i_11684].Field1 = it_11683.line;
i_11684 += 1;
total_11685 += 1;
it_11683 = it_11683.prev;
}
} while(false);
L4: do {
L5: while (true) {
if (!!((it_11683 == null))) break L5;
total_11685 += 1;
it_11683 = it_11683.prev;
}
} while(false);
result_11675[0] = makeNimstrLit("");
if (!((total_11685 == i_11684))) {
if (result_11675[0] != null) { result_11675[0] = (result_11675[0].slice(0, -1)).concat(makeNimstrLit("(")); } else { result_11675[0] = makeNimstrLit("(");};
if (result_11675[0] != null) { result_11675[0] = (result_11675[0].slice(0, -1)).concat(cstrToNimstr(((total_11685 - i_11684))+"")); } else { result_11675[0] = cstrToNimstr(((total_11685 - i_11684))+"");};
if (result_11675[0] != null) { result_11675[0] = (result_11675[0].slice(0, -1)).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_11675[0] = makeNimstrLit(" calls omitted) ...\x0A");};
}

L6: do {
var j_11815 = 0;
var HEX3Atmp_11821 = 0;
HEX3Atmp_11821 = (i_11684 - 1);
var res_11824 = HEX3Atmp_11821;
L7: do {
L8: while (true) {
if (!(0 <= res_11824)) break L8;
j_11815 = res_11824;
add_9837(result_11675, 0, tempframes_11689[j_11815].Field0);
if ((0 < tempframes_11689[j_11815].Field1)) {
if (result_11675[0] != null) { result_11675[0] = (result_11675[0].slice(0, -1)).concat(makeNimstrLit(", line: ")); } else { result_11675[0] = makeNimstrLit(", line: ");};
if (result_11675[0] != null) { result_11675[0] = (result_11675[0].slice(0, -1)).concat(cstrToNimstr((tempframes_11689[j_11815].Field1)+"")); } else { result_11675[0] = cstrToNimstr((tempframes_11689[j_11815].Field1)+"");};
}

if (result_11675[0] != null) { result_11675[0] = (result_11675[0].slice(0, -1)).concat(makeNimstrLit("\x0A")); } else { result_11675[0] = makeNimstrLit("\x0A");};
res_11824 -= 1;
}
} while(false);
} while(false);
return result_11675[0];
}
function rawwritestacktrace_11828() {

var result_11830 = null;
if (!((framePtr == null))) {
result_11830 = (makeNimstrLit("Traceback (most recent call last)\x0A").slice(0,-1)).concat(auxwritestacktrace_11672(framePtr));
framePtr = null;
}
else {
if (!((lastJSError == null))) {
result_11830 = cstrToNimstr(lastJSError.stack);
}
else {
result_11830 = makeNimstrLit("No stack traceback available\x0A");
}
}
return result_11830;
}
function unhandledException(e_11861) {

var buf_12001 = rawwritestacktrace_11828();
}
function raiseOverflow() {

var e_12810 = null;
e_12810 = {m_type: NTI3240, parent: null, name: null, message: null, trace: null};
e_12810.message = makeNimstrLit("over- or underflow");
raiseException(e_12810, "OverflowError");
}
function raiseDivByZero() {

var e_12826 = null;
e_12826 = {m_type: NTI3238, parent: null, name: null, message: null, trace: null};
e_12826.message = makeNimstrLit("division by zero");
raiseException(e_12826, "DivByZeroError");
}
var gl_27001 = [null];
var viewportwidth_27003 = [0];
var viewportheight_27005 = [0];
var shaderprogram_27075 = [null];
var vertexpositionattribute_27077 = [0];
var pmatrixuniform_27079 = [null];
var mvmatrixuniform_27081 = [null];
function f32a_26901(s_26904) {

var result_26905 = null;
var F={procname:"webgl.f32A",prev:framePtr,filename:"c:\\users\\silvio\\.nimble\\pkgs\\webgl-0.1.0\\webgl.nim",line:0};
framePtr = F;
F.line = 285;
result_26905 = new Float32Array(s_26904);framePtr = framePtr.prev;
return result_26905;
}
function newseq_27090(len_27094) {

var result_27096 = null;
var F={procname:"newSeq.newSeq",prev:framePtr,filename:"c:\\dev\\nim-0.14.2\\lib\\system.nim",line:0};
framePtr = F;
result_27096 = new Array(len_27094); for (var i=0;i<len_27094;++i) {result_27096[i]=0.0;}framePtr = framePtr.prev;
return result_27096;
}
var mvmatrix_27126 = /**/[f32a_26901(newseq_27090(16))];
var pmatrix_27156 = /**/[f32a_26901(newseq_27090(16))];
var trianglevertexpositionbuffer_27160 = [null];
var squarevertexpositionbuffer_27162 = [null];
var tin_27167 = [{Field0: 0, Field1: 0}];
var vin_27172 = [{Field0: 0, Field1: 0}];
function getcontextwebgl_26753(c_26755) {

var result_26756 = null;
var F={procname:"webgl.getContextWebGL",prev:framePtr,filename:"c:\\users\\silvio\\.nimble\\pkgs\\webgl-0.1.0\\webgl.nim",line:0};
framePtr = F;
F.line = 228;
result_26756 = c_26755.getContext('webgl') || c_26755.getContext('experimental-webgl');framePtr = framePtr.prev;
return result_26756;
}
function initgl_27051(canvas_27053) {

var F={procname:"ex2.initGL",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
F.line = 21;
gl_27001[0] = getcontextwebgl_26753(canvas_27053);
F.line = 22;
viewportwidth_27003[0] = canvas_27053.width;
F.line = 23;
viewportheight_27005[0] = canvas_27053.height;
framePtr = framePtr.prev;
}
function getshader_27054(gl_27056, id_27057, stype_27058) {

var result_27059 = null;
var F={procname:"ex2.getShader",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
BeforeRet: do {
F.line = 29;
var shaderscript_27060 = document.getElementById(id_27057);
if ((shaderscript_27060 == null)) {
F.line = 31;
break BeforeRet;
}

F.line = 33;
var str_27073 = shaderscript_27060.firstChild.nodeValue;
if ((stype_27058 == "x-shader/x-fragment")) {
F.line = 42;
result_27059 = gl_27056.createShader(35632);
}
else {
if ((stype_27058 == "x-shader/x-vertex")) {
F.line = 44;
result_27059 = gl_27056.createShader(35633);
}
else {
F.line = 46;
break BeforeRet;
}
}
gl_27056.shaderSource(result_27059, str_27073);
gl_27056.compileShader(result_27059);
F.line = 51;
if (!gl_27056.getShaderParameter(result_27059, gl_27056.COMPILE_STATUS)){alert(stype_27058+' '+gl_27056.getShaderInfoLog(result_27059));return null;};} while (false); 
framePtr = framePtr.prev;
return result_27059;
}
function initshaders_27083() {

var F={procname:"ex2.initShaders",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
F.line = 59;
var fragmentshader_27085 = getshader_27054(gl_27001[0], "shader-fs", "x-shader/x-fragment");
F.line = 60;
var vertexshader_27086 = getshader_27054(gl_27001[0], "shader-vs", "x-shader/x-vertex");
F.line = 62;
shaderprogram_27075[0] = gl_27001[0].createProgram();
gl_27001[0].attachShader(shaderprogram_27075[0], vertexshader_27086);
gl_27001[0].attachShader(shaderprogram_27075[0], fragmentshader_27085);
gl_27001[0].linkProgram(shaderprogram_27075[0]);
gl_27001[0].useProgram(shaderprogram_27075[0]);
F.line = 69;
vertexpositionattribute_27077[0] = gl_27001[0].getAttribLocation(shaderprogram_27075[0], "aVertexPosition");
gl_27001[0].enableVertexAttribArray(vertexpositionattribute_27077[0]);
F.line = 71;
pmatrixuniform_27079[0] = gl_27001[0].getUniformLocation(shaderprogram_27075[0], "uPMatrix");
F.line = 72;
mvmatrixuniform_27081[0] = gl_27001[0].getUniformLocation(shaderprogram_27075[0], "uMVMatrix");
framePtr = framePtr.prev;
}
function initbuffers_27174() {

var F={procname:"ex2.initBuffers",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
F.line = 89;
trianglevertexpositionbuffer_27160[0] = gl_27001[0].createBuffer();
gl_27001[0].bindBuffer(34962, trianglevertexpositionbuffer_27160[0]);
F.line = 91;
var vertices_27192 = [0.0, 1.0000000000000000e+000, 0.0, -1.0000000000000000e+000, -1.0000000000000000e+000, 0.0, 1.0000000000000000e+000, -1.0000000000000000e+000, 0.0];
gl_27001[0].bufferData(34962, f32a_26901(vertices_27192), 35044);
F.line = 97;
tin_27167[0].Field0 = 3;
F.line = 98;
tin_27167[0].Field1 = 3;
F.line = 100;
squarevertexpositionbuffer_27162[0] = gl_27001[0].createBuffer();
gl_27001[0].bindBuffer(34962, squarevertexpositionbuffer_27162[0]);
F.line = 102;
var vertices2_27210 = [1.0000000000000000e+000, 1.0000000000000000e+000, 0.0, -1.0000000000000000e+000, 1.0000000000000000e+000, 0.0, 1.0000000000000000e+000, -1.0000000000000000e+000, 0.0, -1.0000000000000000e+000, -1.0000000000000000e+000, 0.0];
gl_27001[0].bufferData(34962, f32a_26901(vertices2_27210), 35044);
F.line = 109;
vin_27172[0].Field0 = 3;
F.line = 110;
vin_27172[0].Field1 = 4;
framePtr = framePtr.prev;
}
function perspective4_27224(a_27232, b_27234, c_27236, d_27238, e_27240) {

var F={procname:"perspective4.perspective4",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
F.line = 14;
function frustum(a,b,c,d,e,g,f){var h=b-a,i=d-c,j=g-e;f[0]=e*2/h;f[1]=0;f[2]=0;f[3]=0;f[4]=0;f[5]=e*2/i;f[6]=0;f[7]=0;f[8]=(b+a)/h;f[9]=(d+c)/i;f[10]=-(g+e)/j;f[11]=-1;f[12]=0;f[13]=0;f[14]=-(g*e*2)/j;f[15]=0;return f;};a_27232=c_27236*Math.tan(a_27232*Math.PI/360);b_27234=a_27232*b_27234;result_27241 = frustum(-b_27234,b_27234,-a_27232,a_27232,c_27236,d_27238,e_27240);framePtr = framePtr.prev;
}
function HEX2F_19607(x_19609, y_19610) {

var result_19611 = 0.0;
var F={procname:"system./",prev:framePtr,filename:"c:\\dev\\nim-0.14.2\\lib\\system.nim",line:0};
framePtr = F;
F.line = 3168;
result_19611 = (x_19609 / y_19610);
framePtr = framePtr.prev;
return result_19611;
}
function identity4_27244(a_27248) {

var F={procname:"identity4.identity4",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
F.line = 9;
a_27248[0]=1;a_27248[1]=0;a_27248[2]=0;a_27248[3]=0;a_27248[4]=0;a_27248[5]=1;a_27248[6]=0;a_27248[7]=0;a_27248[8]=0;a_27248[9]=0;a_27248[10]=1;a_27248[11]=0;a_27248[12]=0;a_27248[13]=0;a_27248[14]=0;a_27248[15]=1;result_27249=a_27248framePtr = framePtr.prev;
}
function traslate4_27267(a_27273, b_27275, c_27277) {

var F={procname:"traslate4.traslate4",prev:framePtr,filename:"c:\\users\\silvio\\.nimble\\pkgs\\webgl-0.1.0\\webgl.nim",line:0};
framePtr = F;
F.line = 301;
var d=b_27275[0],e=b_27275[1];b_27275=b_27275[2];if(!c_27277||a_27273==c_27277){a_27273[12]=a_27273[0]*d+a_27273[4]*e+a_27273[8]*b_27275+a_27273[12];a_27273[13]=a_27273[1]*d+a_27273[5]*e+a_27273[9]*b_27275+a_27273[13];a_27273[14]=a_27273[2]*d+a_27273[6]*e+a_27273[10]*b_27275+a_27273[14];a_27273[15]=a_27273[3]*d+a_27273[7]*e+a_27273[11]*b_27275+a_27273[15];return a_27273}var g=a_27273[0],f=a_27273[1],h=a_27273[2],i=a_27273[3],j=a_27273[4],k=a_27273[5],l=a_27273[6],o=a_27273[7],m=a_27273[8],n=a_27273[9],p=a_27273[10],r=a_27273[11];c_27277[0]=g;c_27277[1]=f;c_27277[2]=h;c_27277[3]=i;c_27277[4]=j;c_27277[5]=k;c_27277[6]=l;c_27277[7]=o;c_27277[8]=m;c_27277[9]=n;c_27277[10]=p;c_27277[11]=r;c_27277[12]=g*d+j*e+m*b_27275+a_27273[12];c_27277[13]=f*d+k*e+n*b_27275+a_27273[13];c_27277[14]=h*d+l*e+p*b_27275+a_27273[14];c_27277[15]=i*d+o*e+r*b_27275+a_27273[15];result_27278 = c_27277;framePtr = framePtr.prev;
}
function setmatrixuniforms_27158() {

var F={procname:"ex2.setMatrixUniforms",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
gl_27001[0].uniformMatrix4fv(pmatrixuniform_27079[0], false, pmatrix_27156[0]);
gl_27001[0].uniformMatrix4fv(mvmatrixuniform_27081[0], false, mvmatrix_27126[0]);
framePtr = framePtr.prev;
}
function drawscene_27211() {

var F={procname:"ex2.drawScene",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
gl_27001[0].viewport(0, 0, viewportwidth_27003[0], viewportheight_27005[0]);
gl_27001[0].clear(16640);
perspective4_27224(45, HEX2F_19607(viewportwidth_27003[0], viewportheight_27005[0]), 1.0000000000000001e-001, 1.0000000000000000e+002, pmatrix_27156[0]);
identity4_27244(mvmatrix_27126[0]);
traslate4_27267(mvmatrix_27126[0], f32a_26901([-1.5000000000000000e+000, 0.0, -7.0000000000000000e+000]), mvmatrix_27126[0]);
gl_27001[0].bindBuffer(34962, trianglevertexpositionbuffer_27160[0]);
gl_27001[0].vertexAttribPointer(vertexpositionattribute_27077[0], tin_27167[0].Field0, 5126, false, 0, 0);
setmatrixuniforms_27158();
gl_27001[0].drawArrays(4, 0, tin_27167[0].Field1);
traslate4_27267(mvmatrix_27126[0], f32a_26901([3.0000000000000000e+000, 0.0, 0.0]), mvmatrix_27126[0]);
gl_27001[0].bindBuffer(34962, squarevertexpositionbuffer_27162[0]);
gl_27001[0].vertexAttribPointer(vertexpositionattribute_27077[0], vin_27172[0].Field0, 5126, false, 0, 0);
setmatrixuniforms_27158();
gl_27001[0].drawArrays(5, 0, vin_27172[0].Field1);
framePtr = framePtr.prev;
}
function HEX3Aanonymous_27315(e_27318) {

var F={procname:"ex2.:anonymous",prev:framePtr,filename:"ex2.nim",line:0};
framePtr = F;
F.line = 140;
var canvas_27319 = document.getElementById("glcanvas");
initgl_27051(canvas_27319);
initshaders_27083();
initbuffers_27174();
gl_27001[0].clearColor(0.0, 0.0, 0.0, 1.0000000000000000e+000);
gl_27001[0].enable(2929);
drawscene_27211();
framePtr = framePtr.prev;
}
window.onload = HEX3Aanonymous_27315;
